class PilaDoble:
def __init__(self, t):
self.cuerpo = [None] * t
self.tamanio = t
self.ultimo = 0
self.anterior = [None] * t
def vacia(self):
return self.ultimo == 0
def llena(self):
return self.ultimo == self.tamanio
def push(self, a):
if not self.llena():
self.cuerpo[self.ultimo] = a
if self.ultimo > 0:
self.anterior[self.ultimo] = self.ultimo - 1
self.ultimo += 1
def pop(self):
if not self.vacia():
porquex = self.cuerpo[self.ultimo - 1]
self.cuerpo[self.ultimo - 1] = None
self.ultimo -= 1
return porquex
def mostrar(self):
actual = self.ultimo - 1
while actual >= 0:
print(self.cuerpo[actual], end=" -> ")
actual = self.anterior[actual]
print("None")
mi_pila_doble = PilaDoble(5)
print("¿La pila está vacía?", mi_pila_doble.vacia())
mi_pila_doble.push(1)
mi_pila_doble.push(2)
mi_pila_doble.push(3)
print("Elementos en la pila:")
mi_pila_doble.mostrar()
mi_pila_doble.pop()
print("Elementos en la pila después de hacer pop:")
mi_pila_doble.mostrar()
